apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: keycloakscopes.rustcloak.k8s.eboland.de
spec:
  group: rustcloak.k8s.eboland.de
  names:
    categories:
    - keycloak
    - all
    kind: KeycloakScope
    plural: keycloakscopes
    shortNames:
    - kcs
    singular: keycloakscope
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: true if the realm is ready
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Status String of the resource
      jsonPath: .status.status
      name: Status
      type: string
    - description: time since the realm was created
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: resource to define a Scope within a [KeyclaokClient](./keycloakclient.md)
        properties:
          spec:
            description: the KeycloakScope resource
            properties:
              clientRef:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              definition:
                description: |-
                  ScopeRepresentation

                  <details><summary>JSON schema</summary>

                  ```json { "type": "object", "properties": { "displayName": { "type": "string" }, "iconUri": { "type": "string" }, "id": { "type": "string" }, "name": { "type": "string" }, "policies": { "type": "array", "items": { "$ref": "#/$defs/PolicyRepresentation" } }, "resources": { "type": "array", "items": { "$ref": "#/$defs/ResourceRepresentation" } } } } ``` </details>
                properties:
                  displayName:
                    nullable: true
                    type: string
                  iconUri:
                    nullable: true
                    type: string
                  id:
                    nullable: true
                    type: string
                    x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                  name:
                    nullable: true
                    type: string
                  policies:
                    items:
                      description: |-
                        PolicyRepresentation

                        <details><summary>JSON schema</summary>

                        ```json { "type": "object", "properties": { "config": { "type": "object", "additionalProperties": { "type": "string" } }, "decisionStrategy": { "$ref": "#/$defs/DecisionStrategy" }, "description": { "type": "string" }, "id": { "type": "string" }, "logic": { "$ref": "#/$defs/Logic" }, "name": { "type": "string" }, "owner": { "type": "string" }, "policies": { "type": "array", "items": { "type": "string" }, "uniqueItems": true }, "resourceType": { "type": "string" }, "resources": { "type": "array", "items": { "type": "string" }, "uniqueItems": true }, "resourcesData": { "type": "array", "items": { "$ref": "#/$defs/ResourceRepresentation" }, "uniqueItems": true }, "scopes": { "type": "array", "items": { "type": "string" }, "uniqueItems": true }, "scopesData": { "type": "array", "items": { "$ref": "#/$defs/ScopeRepresentation" }, "uniqueItems": true }, "type": { "type": "string" } } } ``` </details>
                      properties:
                        config:
                          additionalProperties:
                            type: string
                          type: object
                        decisionStrategy:
                          description: |-
                            DecisionStrategy

                            <details><summary>JSON schema</summary>

                            ```json { "type": "string", "enum": [ "AFFIRMATIVE", "UNANIMOUS", "CONSENSUS" ] } ``` </details>
                          enum:
                          - AFFIRMATIVE
                          - UNANIMOUS
                          - CONSENSUS
                          nullable: true
                          type: string
                        description:
                          nullable: true
                          type: string
                        id:
                          nullable: true
                          type: string
                        logic:
                          description: |-
                            Logic

                            <details><summary>JSON schema</summary>

                            ```json { "type": "string", "enum": [ "POSITIVE", "NEGATIVE" ] } ``` </details>
                          enum:
                          - POSITIVE
                          - NEGATIVE
                          nullable: true
                          type: string
                        name:
                          nullable: true
                          type: string
                        owner:
                          nullable: true
                          type: string
                        policies:
                          items:
                            type: string
                          nullable: true
                          type: array
                        resourceType:
                          nullable: true
                          type: string
                        resources:
                          items:
                            type: string
                          nullable: true
                          type: array
                        resourcesData:
                          items:
                            description: |-
                              ResourceRepresentation

                              <details><summary>JSON schema</summary>

                              ```json { "type": "object", "properties": { "_id": { "type": "string" }, "attributes": { "type": "object", "additionalProperties": { "type": "array", "items": { "type": "string" } } }, "displayName": { "type": "string" }, "icon_uri": { "type": "string" }, "name": { "type": "string" }, "owner": { "type": "object", "allOf": [ { "$ref": "#/$defs/ResourceOwnerRepresentation" } ] }, "ownerManagedAccess": { "type": "boolean" }, "scopes": { "type": "array", "items": { "$ref": "#/$defs/ScopeRepresentation" }, "uniqueItems": true }, "scopesUma": { "type": "array", "items": { "$ref": "#/$defs/ScopeRepresentation" }, "uniqueItems": true }, "type": { "type": "string" }, "uri": { "type": "string" }, "uris": { "type": "array", "items": { "type": "string" }, "uniqueItems": true } } } ``` </details>
                            properties:
                              _id:
                                nullable: true
                                type: string
                              attributes:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                type: object
                              displayName:
                                nullable: true
                                type: string
                              icon_uri:
                                nullable: true
                                type: string
                              name:
                                nullable: true
                                type: string
                              owner:
                                description: |-
                                  ResourceOwnerRepresentation

                                  <details><summary>JSON schema</summary>

                                  ```json { "type": "object", "properties": { "id": { "type": "string" }, "name": { "type": "string" } } } ``` </details>
                                nullable: true
                                properties:
                                  id:
                                    nullable: true
                                    type: string
                                  name:
                                    nullable: true
                                    type: string
                                type: object
                              ownerManagedAccess:
                                nullable: true
                                type: boolean
                              type:
                                nullable: true
                                type: string
                              uri:
                                nullable: true
                                type: string
                              uris:
                                items:
                                  type: string
                                nullable: true
                                type: array
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          nullable: true
                          type: array
                        scopes:
                          items:
                            type: string
                          nullable: true
                          type: array
                        type:
                          nullable: true
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  resources:
                    items:
                      description: |-
                        ResourceRepresentation

                        <details><summary>JSON schema</summary>

                        ```json { "type": "object", "properties": { "_id": { "type": "string" }, "attributes": { "type": "object", "additionalProperties": { "type": "array", "items": { "type": "string" } } }, "displayName": { "type": "string" }, "icon_uri": { "type": "string" }, "name": { "type": "string" }, "owner": { "type": "object", "allOf": [ { "$ref": "#/$defs/ResourceOwnerRepresentation" } ] }, "ownerManagedAccess": { "type": "boolean" }, "scopes": { "type": "array", "items": { "$ref": "#/$defs/ScopeRepresentation" }, "uniqueItems": true }, "scopesUma": { "type": "array", "items": { "$ref": "#/$defs/ScopeRepresentation" }, "uniqueItems": true }, "type": { "type": "string" }, "uri": { "type": "string" }, "uris": { "type": "array", "items": { "type": "string" }, "uniqueItems": true } } } ``` </details>
                      properties:
                        _id:
                          nullable: true
                          type: string
                        attributes:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          type: object
                        displayName:
                          nullable: true
                          type: string
                        icon_uri:
                          nullable: true
                          type: string
                        name:
                          nullable: true
                          type: string
                        owner:
                          description: |-
                            ResourceOwnerRepresentation

                            <details><summary>JSON schema</summary>

                            ```json { "type": "object", "properties": { "id": { "type": "string" }, "name": { "type": "string" } } } ``` </details>
                          nullable: true
                          properties:
                            id:
                              nullable: true
                              type: string
                            name:
                              nullable: true
                              type: string
                          type: object
                        ownerManagedAccess:
                          nullable: true
                          type: boolean
                        type:
                          nullable: true
                          type: string
                        uri:
                          nullable: true
                          type: string
                        uris:
                          items:
                            type: string
                          nullable: true
                          type: array
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: has(self.id) == has(oldSelf.id)
              options:
                description: Options for the request to the Keycloak Admin API.
                nullable: true
                type: object
              patchFrom:
                additionalProperties:
                  description: EnvVarSource represents a source for the value of an EnvVar.
                  properties:
                    configMapKeyRef:
                      description: Selects a key of a ConfigMap.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the ConfigMap or its key must be defined
                          type: boolean
                      required:
                      - key
                      - name
                      type: object
                    fieldRef:
                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                      properties:
                        apiVersion:
                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                          type: string
                        fieldPath:
                          description: Path of the field to select in the specified API version.
                          type: string
                      required:
                      - fieldPath
                      type: object
                    resourceFieldRef:
                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                      properties:
                        containerName:
                          description: 'Container name: required for volumes, optional for env vars'
                          type: string
                        divisor:
                          description: Specifies the output format of the exposed resources, defaults to "1"
                          type: string
                        resource:
                          description: 'Required: resource to select'
                          type: string
                      required:
                      - resource
                      type: object
                    secretKeyRef:
                      description: Selects a key of a secret in the pod's namespace
                      properties:
                        key:
                          description: The key of the secret to select from.  Must be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must be defined
                          type: boolean
                      required:
                      - key
                      - name
                      type: object
                    valueAs:
                      enum:
                      - auto
                      - string
                      - number
                      - yaml
                      - json
                      - bool
                      nullable: true
                      type: string
                  type: object
                description: Defines additional values that can be loaded from secrets or configmaps. Field selectors are not supported. For more informations see [the patches documentation](../configuration/patches.md).
                type: object
              patchFrom2:
                items:
                  description: EnvVarSource represents a source for the value of an EnvVar.
                  properties:
                    configMapKeyRef:
                      description: Selects a key of a ConfigMap.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the ConfigMap or its key must be defined
                          type: boolean
                      required:
                      - key
                      - name
                      type: object
                    fieldRef:
                      description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                      properties:
                        apiVersion:
                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                          type: string
                        fieldPath:
                          description: Path of the field to select in the specified API version.
                          type: string
                      required:
                      - fieldPath
                      type: object
                    path:
                      type: string
                    resourceFieldRef:
                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                      properties:
                        containerName:
                          description: 'Container name: required for volumes, optional for env vars'
                          type: string
                        divisor:
                          description: Specifies the output format of the exposed resources, defaults to "1"
                          type: string
                        resource:
                          description: 'Required: resource to select'
                          type: string
                      required:
                      - resource
                      type: object
                    secretKeyRef:
                      description: Selects a key of a secret in the pod's namespace
                      properties:
                        key:
                          description: The key of the secret to select from.  Must be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must be defined
                          type: boolean
                      required:
                      - key
                      - name
                      type: object
                    valueAs:
                      enum:
                      - auto
                      - string
                      - number
                      - yaml
                      - json
                      - bool
                      nullable: true
                      type: string
                  required:
                  - path
                  type: object
                type: array
            required:
            - clientRef
            - definition
            type: object
          status:
            nullable: true
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
                      format: date-time
                      nullable: true
                      type: string
                    message:
                      nullable: true
                      type: string
                    reason:
                      nullable: true
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              instance:
                anyOf:
                - required:
                  - instanceRef
                - required:
                  - clusterInstanceRef
                properties:
                  clusterInstanceRef:
                    description: The name of the cluster instance to which this object belongs to.
                    type: string
                    x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                  instanceRef:
                    description: The name of the namespaced instance to which this object belongs to.
                    type: string
                    x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                type: object
              message:
                type: string
              ready:
                type: boolean
              resourcePath:
                type: string
              status:
                type: string
            required:
            - ready
            type: object
        required:
        - spec
        title: KeycloakScope
        type: object
    served: true
    storage: true
    subresources:
      status: {}
